clear all;
close all;

% spot load data
s_611= [0; 0; 170+80i];                 % spot load at node 611 and the units in kW and KVAR. Y-I
s_634= [160+110i; 120+90i; 120+90i];    % Y-PQ
s_645= [0; 170+125i; 0];                % Y-PQ
s_646= [0; 230+132i; 0];                % D-Z
s_652= [128+86i; 0; 0];                 % Y-Z
s_671= [385+220i; 385+220i; 385+220i];  % D-PQ
s_675= [485+190i; 68+60i; 290+112i];    % Y-PQ
s_692= [0; 0; 170+151i];                % D-I


% distributed load data (kW+kVAR)
d_632= [17+10i; 66+38i; 117+68i]/2;     % Y-PQ
d_671= [17+10i; 66+38i; 117+68i]/2;     % Y-PQ

% line impedance data (ohm per mile)
z_601= [0.3465+1.0179i 0.1560+0.5017i 0.1580+0.4236i; 0.1560+0.5017i 0.3375+1.0478i 0.1535+0.3849i; 0.1580+0.4236i 0.1535+0.3849i 0.3414+1.0348i]/1.609344; % convert mile to km
z_601_2000= z_601*2000*0.0003048;
z_601_1000= z_601*1000*0.0003048;
z_602= [0.7526+1.1814i 0.1580+0.4236i 0.1560+0.5017i; 0.1580+0.4236i 0.7475+1.1983i 0.1535+0.3849i; 0.1560+0.5017i 0.1535+0.3849i 0.7436+1.2112i]*500*0.0003048/1.609344;
z_603= [0 0 0; 0 1.3294+1.3471i 0.2066+0.4591i; 0 0.2066+0.4591i 1.3238+1.3569i]/1.609344;
z_603_500= z_603*500*0.0003048;
z_603_300= z_603*300*0.0003048;
z_604= [1.3238+1.3569i 0 0.2066+0.4591i; 0 0 0; 0.2066+0.4591i 0 1.3294+1.3471i]*300*0.0003048/1.609344;
z_605= [0 0 0; 0 0 0; 0 0 1.3292+1.3475i]*300*0.0003048/1.609344;       % length 300 feet, converted to km
z_606= [0.7982+0.4463i 0.3192+0.0328i 0.2849-0.0143i; 0.3192+0.0328i 0.7891+0.4041i 0.3192+0.0328i; 0.2849-0.0143i 0.3192+0.0328i 0.7982+0.4463i]*500*0.0003048/1.609344;
z_607= [1.3425+0.5124i 0 0; 0 0 0; 0 0 0]*800*0.0003048/1.609344;

% line admittance data (in microsiemens per mile)
y_601= [6.2998i -1.9958i -1.2595i; -1.9958i 5.9597i -0.7417i; -1.2595i -0.7417i 5.6386i]/(10^6*1.609344);
y_601_2000= y_601*2000*0.0003048;
y_601_1000= y_601*1000*0.0003048;
y_602= [5.6690i -1.0817i -1.6905i; -1.0817i 5.1795i -0.6588i; -1.6905i -0.6588i 5.4246i]*500*0.0003048/(10^6*1.609344);
y_603= [0 0 0; 0 4.7097i -0.8999i; 0 -0.8999i 4.6658i]/(10^6*1.609344);
y_603_500= y_603*500*0.0003048;
y_603_300= y_603*300*0.0003048;
y_604= [4.6658i 0 -0.8999i; 0 0 0; -0.8999i 0 4.7097i]*300*0.0003048/(10^6*1.609344);
y_605= [0 0 0; 0 0 0; 0 0 4.5193i]*300*0.0003048*300*0.0003048/(10^6*1.609344);       % lenght 300 feet, converted to km
y_606= [96.8897i 0 0; 0 96.887i 0; 0 0 96.887i]*500*0.0003048/(10^6*1.609344);
y_607= [88.9912i 0 0; 0 0 0; 0 0 0]*800*0.0003048/(10^6*1.609344);


% shunt capacitors data (kVAr)
c_675= [200; 200; 200];
c_611= [0; 0; 100];

% line modelling
u= [1 0 0; 0 1 0; 0 0 1];                              % unity matrix
a_601_2000 = u + 0.5*z_601_2000*y_601_2000;
b_601_2000= z_601_2000;
c_601_2000= y_601_2000+ 0.25*y_601_2000*z_601_2000*y_601_2000;
d_601_2000= a_601_2000;
A_601_2000= inv(a_601_2000);
B_601_2000= inv(a_601_2000)*b_601_2000;

a_601_1000 = u + 0.5*z_601_1000*y_601_1000;
b_601_1000= z_601_1000;
c_601_1000= y_601_1000+ 0.25*y_601_1000*z_601_1000*y_601_1000;
d_601_1000= a_601_1000;
A_601_1000= inv(a_601_1000);
B_601_1000= inv(a_601_1000)*b_601_1000;

a_602= u + 0.5*z_602*y_602;
b_602= z_602;
c_602= y_602+ 0.25*y_602*z_602*y_602;
d_602= a_602;
A_602= inv(a_602);
B_602= inv(a_602)*b_602;

a_603_500= u + 0.5*z_603_500*y_603_500;
b_603_500= z_603_500;
c_603_500= y_603_500+ 0.25*y_603_500*z_603_500*y_603_500;
d_603_500= a_603_500;
A_603_500= inv(a_603_500);
B_603_500= inv(a_603_500)*b_603_500;

a_603_300= u + 0.5*z_603_300*y_603_300;
b_603_300= z_603_300;
c_603_300= y_603_300+ 0.25*y_603_300*z_603_300*y_603_300;
d_603_300= a_603_300;
A_603_300= inv(a_603_300);
B_603_300= inv(a_603_300)*b_603_300;

a_604= u + 0.5*z_604*y_604;
b_604= z_604;
c_604= y_604+ 0.25*y_604*z_604*y_604;
d_604= a_604;
A_604= inv(a_604);
B_604= inv(a_604)*b_604;

a_605= u + 0.5*z_605*y_605;
b_605= z_605;
c_605= y_605+ 0.25*y_605*z_605*y_605;
d_605= a_605;
A_605= inv(a_605);
B_605= inv(a_605)*b_605;
    
a_606= u + 0.5*z_606*y_606;
b_606= z_606;
c_606= y_606+ 0.25*y_606*z_606*y_606;
d_606= a_606;
A_606= inv(a_606);
B_606= inv(a_606)*b_606;
    
a_607= u + 0.5*z_607*y_607;
b_607= z_607;
c_607= y_607+ 0.25*y_607*z_607*y_607;
d_607= a_607;
A_607= inv(a_607);
B_607= inv(a_607)*b_607;

% Transformer modelling
nt= 4.16/0.48;
zt= (0.011+0.02i)*(0.48^2/0.5);
ztrans= [zt 0 0; 0 zt 0; 0 0 zt];
At= inv(nt*[1 0 0; 0 1 0; 0 0 1]);
Bt= ztrans;
    
% initial voltage (all in kV)
v_632= [2449.899106-106.5365i; -1315.815732-2128.824743i; -1140.77911+2160.936787i];
i_645= zeros(3,1);
i_646= zeros(3,1);
i_633= zeros(3,1);
i_634= zeros(3,1);
i_671= zeros(3,1);
i_684= zeros(3,1);
i_611= zeros(3,1);
i_652= zeros(3,1);
i_675= zeros(3,1);

di= [1 0 -1; -1 1 0; 0 -1 1];
dv= [1 -1 0; 0 1 -1; -1 0 1];

v_633_old= zeros(3,1);
v_671_old= zeros(3,1);
v_634_old= zeros(3,1);
v_645_old= zeros(3,1);
v_646_old= zeros(3,1);
v_692_old= zeros(3,1);
v_675_old= zeros(3,1);
v_684_old= zeros(3,1);
v_611_old= zeros(3,1);
v_652_old= zeros(3,1);
k=2;
p=3;

while k<p
    
    % Forward sweep
    v_645= A_603_500*v_632- B_603_500*i_645;
    v_646= A_603_300*v_645- B_603_300*i_646;
    v_LL_646= dv*v_646;
    v_633= A_602*v_632- B_602*i_633;
    v_634= At*v_633 - Bt*i_634;
    v_671= A_601_2000*v_632 - B_601_2000*i_671;
    v_LL_671= dv*v_671;
    v_684= A_604*v_671- B_604*i_684;
    v_611= A_605*v_684- B_605*i_611;
    v_652= A_607*v_684- B_607*i_652;
    v_680= A_601_1000*v_671;
    v_692= v_671;
    v_LL_692= dv*v_692;
    v_675= A_606*v_692- B_606*i_675;
    

    % error calculation    

     for q=1:3
       err(1,q)= abs(abs(v_634(q,1))-abs(v_634_old(q,1)))/277.1281292; 
       err(2,q)= abs(abs(v_633(q,1))-abs(v_633_old(q,1)))/2401.77712; 
       err(3,q)= abs(abs(v_645(q,1))-abs(v_645_old(q,1)))/2401.77712;
       err(4,q)= abs(abs(v_646(q,1))-abs(v_646_old(q,1)))/2401.77712;
       err(5,q)= abs(abs(v_671(q,1))-abs(v_671_old(q,1)))/2401.77712;
       err(6,q)= abs(abs(v_692(q,1))-abs(v_692_old(q,1)))/2401.77712;
       err(7,q)= abs(abs(v_684(q,1))-abs(v_684_old(q,1)))/2401.77712;
       err(8,q)= abs(abs(v_611(q,1))-abs(v_611_old(q,1)))/2401.77712;
       err(9,q)= abs(abs(v_652(q,1))-abs(v_652_old(q,1)))/2401.77712;
       err(10,q)= abs(abs(v_675(q,1))-abs(v_675_old(q,1)))/2401.77712;
     end 

    if max(err)<=0.00001
    % zeros are placed to the missing phases
        v_645(1,:)=0;
        v_646(1,:)=0;
        v_684(2,:)=0;
        v_652(2,:)=0;
        v_652(3,:)=0;
        v_611(1,:)=0;
        v_611(2,:)=0;
       break
    else
        
     % current calculation at each of the node using load modelling
        
        for j=1:3
            i_611_s(j,1)= conj(s_611(j,1)*1000/v_611(j,1));              % constant power

            b_611(j,1)= c_611(j,1)/(abs((v_611(j,1)/1000)^2)*1000);
            i_611_c(j,1)= i*b_611(j,1)*v_611(j,1);                       % shunt capacitor

            i_634(j,1)= conj(s_634(j,1)*1000/v_634(j,1));                % constant power

            i_645(j,1)= conj(s_645(j,1)*1000/v_645(j,1));                % constant power

            zab_646(j,1)= (abs(v_LL_646(j,1))^2)/conj(s_646(j,1)*1000);  % constant impedance
            iab_646(j,1)= v_LL_646(j,1)/zab_646(j,1);

            z_652(j,1)= (abs(v_652(j,1)))^2/conj(s_652(j,1)*1000);       % constant impedance
            i_652(j,1)= v_652(j,1)/z_652(j,1);

            iab_671(j,1)= conj(s_671(j,1)*1000/v_LL_671(j,1));           % constant power

            i_675_s(j,1)= conj(s_675(j,1)*1000/v_675(j,1));
            b_675(j,1)= c_675(j,1)/(abs((v_675(j,1)/1000)^2)*1000);      % shunt capacitor
            i_675_c(j,1)= i*b_675(j,1)*v_675(j,1); 

            iab_692(j,1)= conj(s_675(j,1)*1000/v_LL_692(j,1));           % constant current

            i_632_d(j,1)= conj(d_632(j,1)*1000/v_632(j,1));              % distributed load

            i_671_d(j,1)= conj(d_671(j,1)*1000/v_671(j,1));              % distributed load
        end
        
     i_646 = di*iab_646;
     i_671_L= di*iab_671;
     i_692_L= di*iab_692;


     % Backward sweep

     % Total current calculation at each node
     i_675= i_675_c+i_675_s;
     i_611= i_611_s+i_611_c;                         % junction node
     i_684_1= c_605*v_611+ d_605*i_611;
     i_684_2= c_607*v_652+ d_607*i_652;
     i_684= i_684_1+i_684_2;                         % junction node
     i_671_1= c_604*v_684+ d_604*i_684;
     i_692_1= c_606*v_675+d_606*i_675;
     i_692= i_692_1+i_692_L;                         % junction node
     i_671= i_671_1 + i_692 + i_671_L +i_671_d;      % junction node
     i_645= c_603_300*v_646 + d_603_300*i_646;
     i_633= (1/nt)*u*i_634;
     i_632_1= c_603_500*v_645+ d_603_500*i_645;
     i_632_2= c_602*v_633+d_602*i_633;
     i_632_3= c_601_2000*v_671+ d_601_2000*i_671;
     i_632= i_632_1+ i_632_2+ i_632_3+i_632_d;       % junction node    
     k=k+1;
     p=p+1;
     v_633_old= v_633;
     v_671_old= v_671;
     v_634_old= v_634;
     v_645_old= v_645;
     v_646_old= v_646;
     v_692_old= v_692;
     v_675_old= v_675;
     v_684_old= v_684;
     v_611_old= v_611;
     v_652_old= v_652;
    end
    

end

for j=1:3
    V_mag(1,j)= abs(v_632(j,1))/2401.77712;
    V_mag(2,j)= abs(v_633(j,1))/2401.77712;
    V_mag(3,j)= abs(v_634(j,1))/277.1281292;
    V_mag(4,j)= abs(v_645(j,1))/2401.77712;
    V_mag(5,j)= abs(v_646(j,1))/2401.77712;
    V_mag(6,j)= abs(v_671(j,1))/2401.77712;
    V_mag(7,j)= abs(v_680(j,1))/2401.77712;
    V_mag(8,j)= abs(v_692(j,1))/2401.77712;
    V_mag(9,j)= abs(v_684(j,1))/2401.77712;
    V_mag(10,j)= abs(v_611(j,1))/2401.77712;
    V_mag(11,j)= abs(v_652(j,1))/2401.77712;
    V_mag(12,j)= abs(v_675(j,1))/2401.77712;
    
    V_angle(1,j)= rad2deg(angle(v_632(j,1)));
    V_angle(2,j)= rad2deg(angle(v_633(j,1)));
    V_angle(3,j)= rad2deg(angle(v_634(j,1)));
    V_angle(4,j)= rad2deg(angle(v_645(j,1)));
    V_angle(5,j)= rad2deg(angle(v_646(j,1)));
    V_angle(6,j)= rad2deg(angle(v_671(j,1)));
    V_angle(7,j)= rad2deg(angle(v_680(j,1)));
    V_angle(8,j)= rad2deg(angle(v_692(j,1)));
    V_angle(9,j)= rad2deg(angle(v_684(j,1)));
    V_angle(10,j)= rad2deg(angle(v_611(j,1)));
    V_angle(11,j)= rad2deg(angle(v_652(j,1)));
    V_angle(12,j)= rad2deg(angle(v_675(j,1)));

    
%     Del(i,j)= rad2deg(angle(v{1,i}(j)));
end

bus= ["V632", "V633", "V634", "V645", "V646", "V671", "V680", "V692", "V684", "V611", "V652", "V675"];

disp('----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------');
disp('                                                       Backward/forward Loadflow Analysis');
disp('----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------');
disp('==============================================================================================================================================================================================');
disp('| Bus     |Va|     |Vb|    |Vc|    |     Angle (Degree)          |');
disp('| No      |pu|     |pu|    |pu|      |Ph-a|     |Ph-b|     |Ph-c|');
disp('==============================================================================================================================================================================================');


for m=1:12
    fprintf(bus(m)); fprintf('%10.4f', abs(V_mag(m,:))); fprintf(' %10.3f', V_angle(m,:));fprintf('\n');  
end
